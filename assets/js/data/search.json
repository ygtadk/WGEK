[ { "title": "İlginç HTML İpuçları ve Püf Noktaları 2", "url": "/blogum/posts/ilgin%C3%A7-html-i%CC%87pu%C3%A7lar%C4%B1-ve-p%C3%BCf-noktalar%C4%B1-2/", "categories": "Web", "tags": "html", "date": "2022-03-27 12:18:00 +0300", "snippet": "Dosya İndirme BağlantılarıBir bağlantıya download niteliğini ekleyerek onu indirme bağlantısına dönüştürebilirsiniz. Böyle yapıldığında tarayıcılar bağlantıya gitmek yerine, kullanıcılardan dosyayı disklerine kaydetmelerini ister.&amp;lt;a href=&quot;/media/Da_Vinci_Vitruve_Luc_Viatour.jpg&quot; download&amp;gt; Vitruvius Adamı&amp;lt;/a&amp;gt;Ayrıca download niteliğine atadığınız değer, indireceğiniz dosyanın ismini belirlemenizi sağlar.&amp;lt;a href=&quot;/media/Da_Vinci_Vitruve_Luc_Viatour.jpg&quot; download=&quot;vitruvian_adam.jpg&quot;&amp;gt; Vitruvius Adamı&amp;lt;/a&amp;gt;➡ Vitruvius Adamı download niteliği sadece aynı kökenli (same-origin) bağlantılarda veya blob: ve data: şemalarında çalışır.Düzenlenebilir İçeriklerHTML’de neredeyse her içeriği düzenlenebilir yapabiliriz. Tek yapmamız gereken contenteditable niteliğine true değerini vermek.Aşağıda bir örnek verilmiştir.&amp;lt;div contenteditable=&quot;true&quot;&amp;gt; Bu düzenlenebilir bir metin.&amp;lt;/div&amp;gt;Bu düzenlenebilir bir metin. (Tıkla)Duyarlı (Responsive) Görsellerpicture etiketi ile ekran boyutuna göre duyarlı görsel grubu oluşturabiliriz.&amp;lt;picture&amp;gt; &amp;lt;source media=&quot;(min-width:1200px)&quot; srcset=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg/837px-Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg&quot;&amp;gt; &amp;lt;source media=&quot;(min-width:992px)&quot; srcset=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg/628px-Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg&quot;&amp;gt; &amp;lt;source media=&quot;(min-width:768px)&quot; srcset=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg/392px-Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg&quot;&amp;gt; &amp;lt;source media=&quot;(max-width:767px)&quot; srcset=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg/196px-Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg&quot;&amp;gt; &amp;lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/6/62/Vincent_van_Gogh_-_Self-portrait_with_pipe_-_Google_Art_Project.jpg&quot; alt=&quot;Vincent van Gogh Otoportre&quot; style=&quot;width:auto&quot;&amp;gt;&amp;lt;/picture&amp;gt; Tarayıcınızın geliştirici araçlarını kullanarak bu resmin duyarlı olduğunu görebilirsiniz.Giriş Önerileriinput elementinde giriş önerileri sunmak için datalist elementi kullanabilirsiniz.Yapılması gereken şey input elementine bir list niteliği yerleştirmek ve list niteliğinin değerini datalist için oluşturduğumuz id ile aynı yapmak. En iyisi örnek üzerinde göstermek&amp;lt;label for=&quot;araba&quot;&amp;gt;Arabanın markası ve modeli:&amp;lt;/label&amp;gt;&amp;lt;input list=&quot;arabalar&quot; name=&quot;araba&quot;&amp;gt; &amp;lt;datalist id=&quot;arabalar&quot;&amp;gt; &amp;lt;option value=&quot;1985 Alpine A310 V6 Pack GT Boulogne&quot;&amp;gt; &amp;lt;option value=&quot;1986 Koenig-Specials Countach Turbo&quot;&amp;gt; &amp;lt;option value=&quot;2000 Spoon Civic Type-R&quot;&amp;gt; &amp;lt;option value=&quot;2004 Amuse S2000 GT1 Turbo&quot;&amp;gt; &amp;lt;option value=&quot;2005 TVR Sagaris&quot;&amp;gt; &amp;lt;option value=&quot;2002 Tofaş Doğan SLX 1.6 i.e.&quot;&amp;gt; &amp;lt;option value=&quot;198x Anadol A9 (Prototip)&quot;&amp;gt; &amp;lt;/datalist&amp;gt;Arabanın markası ve modeli: &amp;lt;/datalist&amp;gt;&amp;lt;/div&amp;gt;" }, { "title": "İlginç HTML İpuçları ve Püf Noktaları 1", "url": "/blogum/posts/ilgin%C3%A7-html-i%CC%87pu%C3%A7lar%C4%B1-ve-p%C3%BCf-noktalar%C4%B1-1/", "categories": "Web", "tags": "html", "date": "2022-03-08 20:02:00 +0300", "snippet": "Yazdırılabilir İçerik OluşturmakKullanıcıların web içeriğimizi nasıl tüketeceğini tahmin etmek bayağı zor. Kullanıcılar içeriği görmek ve tüketmek için çok farklı yollara farklı cihazlardan başvurabilmektedir. Bunlardan biri de kullanıcının içeriğimizi yazdırmasıdır.Web sitemiz için bir yazdırılabilir stil kağıdı oluşturmak kullanıcı deneyimini olumlu şekilde etkileyebilir. Bu yöntemin günümüzde sık kullanıldığını pek sanmıyorum ancak web siteniz için yararlı olabileceği için bahsetmek istedim.Buradaki önemli nokta web sitenizideki içeriğin asıl önemli bölümlerinin gerçek kağıda düzgün bir şekilde aktarıldığından emin olmaktır.Bunu, baskı için oluşturulmuş ayrı bir stil kağıdı sağlayarak ve onu HTML’ye ekleyerek veya stil kağıdımıza (yani CSS dosyamıza) bir @media print kuralı ekleyerek yapabiliriz.Aşağıdaki örneklerde kullanımı gösterilmiştir.&amp;lt;!-- ayrı ayrı stil dosyaları olarak kullanımı --&amp;gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&amp;gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;print.css&quot; media=&quot;print&quot;&amp;gt;/* tek stil dosyası içinde kullanımı */@media print { body { font-size: 28px; } @page { margin: 1cm; }} Normalde cm in gibi mutlak ölçü birimlerini kullanmak mantıklı değildir, fakat baskı için oluşturulmuş stil kağıtlarında çok kullanışlı olabilir.Üstü Çizili MetinlerHTML üstü çizili metin tanımlamanın iki farklı yolunu sunar, s ve del öğeleri.Bu öğeler gibi sadece görsel biçimlendirmeye yarayan HTML öğelerinin asıl kullanım nedeni sayfayı anlamlandırmaktır. Bildiğiniz gibi bu etiketlere anlamsal (semantic) etiketler diyoruz.Peki s ile del arasındaki fark ne?s etiketiArtık doğru olmayan veya alakasız olan içerikleri vurgulamak için s öğesini kullanılır. Aşağıda tipik bir örnek verilmiştir.&amp;lt;p&amp;gt;&amp;lt;s&amp;gt;Fiyat: ₺ 199.99&amp;lt;/s&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;BUGÜNE ÖZEL TEKLİF: ₺ 159.99!&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;Fiyat: ₺ 199.99BUGÜNE ÖZEL TEKLİF: ₺ 159.99! Bazı ekran okuyucuları s öğesini normal metin olarak duyurabilir, dikkatli kullanılmalıdır.del etiketiBelgeden kaldırılmış bir içeriği vurgulamak için del öğesi kullanılır.Düzenleme hakkında daha fazla bilgi vermek için cite niteliğini ve düzenlemenin tarihini (ve saatini) eklemek için datetime niteliğini kullanabilirsiniz.&amp;lt;p&amp;gt; En sevdiğim programlama dili &amp;lt;del datetime=&quot;2022-03-06T16:00:30&quot;&amp;gt;Pyhton&amp;lt;/del&amp;gt; &amp;lt;ins datetime=&quot;2022-03-07T17:00:36&quot;&amp;gt;Python&amp;lt;/ins&amp;gt; .&amp;lt;/p&amp;gt; En sevdiğim programlama dili Pyhton Python . del öğesi de ekran okuyucular için problem olabilmektedir, s öğesi gibi dikkatli kullanılmalıdır. Her iki öğe de ekran okuyucuları için sorun teşkil edebildiği için veya istenilen sonucu vermediği için sahte öğeler (pseudo-elements) kullanılması tavsiye edilir.Yazım Denetimi KontrolüGiriş alanları, metin alanı ve düzenlenebilir içerik alanlarında yazım denetimini devre dışı bırakabilirsiniz. Aşağıda bir örnek verilmiştir.&amp;lt;label for=&quot;lbl&quot;&amp;gt;Etiket&amp;lt;/label&amp;gt;&amp;lt;textarea spellcheck=&quot;false&quot; id=&quot;lbl&quot;&amp;gt;I looove coding.&amp;lt;/textarea&amp;gt;spellcheck niteliği için bir değer vermek zorundayız, true veya false.Eğer nitelik yoksa, öğenin yazım hataları için kontrol edilip edilmeyeceğine tarayıcı karar verir.Örnekler&amp;lt;div&amp;gt; &amp;lt;label for=&quot;label1&quot;&amp;gt;Etiket&amp;lt;/label&amp;gt; &amp;lt;input value=&quot;I looove coding.&quot; id=&quot;label1&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt; &amp;lt;label for=&quot;label2&quot;&amp;gt;Etiket&amp;lt;/label&amp;gt; &amp;lt;textarea id=&quot;label2&quot;&amp;gt;I looove coding.&amp;lt;/textarea&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt; &amp;lt;strong&amp;gt;Etiket:&amp;lt;/strong&amp;gt; &amp;lt;div contenteditable&amp;gt;I looove coding.&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;Aşağıdaki alanlardan birine tıklarsanız (bazı tarayıcılarda içeriğe tıklamanız veya bir şeyler yazmanız gerekebilir), “looove” kelimesinin doğru yazılmadığını belirten dalgalı, kesikli veya noktalı kırmızı bir çizgi görmelisiniz. Etiket Etiket I looove coding. Etiket: I looove coding. Sonuçlar tarayıcınıza ve varsayılan dilinize bağlı olarak farklılık gösterebilir. spellcheck niteliği yalnızca bir ipucu olarak kullanılır, tarayıcıların yazım hatalarını kontrol etmesi zorunlu değildir.Şimdi spellcheck niteliğini false değeri ile kullanalım;&amp;lt;div&amp;gt; &amp;lt;label for=&quot;label1&quot;&amp;gt;Etiket&amp;lt;/label&amp;gt; &amp;lt;input spellcheck=&quot;false&quot; value=&quot;I looove coding.&quot; id=&quot;label1&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt; &amp;lt;label for=&quot;label2&quot;&amp;gt;Etiket&amp;lt;/label&amp;gt; &amp;lt;textarea spellcheck=&quot;false&quot; id=&quot;label2&quot;&amp;gt;I looove coding.&amp;lt;/textarea&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt; &amp;lt;strong&amp;gt;Etiket:&amp;lt;/strong&amp;gt; &amp;lt;div spellcheck=&quot;false&quot; contenteditable&amp;gt;I looove coding.&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;Aşağıdaki alanlarda bu sefer yazım denetiminin yapılmadığını göreceksiniz. Etiket Etiket I looove coding. Etiket: I looove coding. Örneklerin çalışma ihtimalini arttırmak için metinleri İngilizce yazdım.Sadece HTML ile Renk Seçici OluşturmakSadece HTML kullanarak renk seçici oluşturabileceğinizi biliyor muydunuz?input etiketimizin type niteliğine color değerini yerleştirirsek güzel bir renk seçici elde etmiş oluruz. Aşağıda bir örnek verilmiştir.&amp;lt;input type=&quot;color&quot; id=&quot;renk-secici&quot; value=&quot;#e66465&quot;&amp;gt;&amp;lt;label for=&quot;renk-secici&quot;&amp;gt;Bir Renk Seç&amp;lt;/label&amp;gt;Bir Renk Seç" }, { "title": "Snap, Flatpak ve AppImage", "url": "/blogum/posts/snap-flatpak-ve-appimage/", "categories": "Linux", "tags": "snap, flatpak, appimage", "date": "2022-02-21 13:55:00 +0300", "snippet": "“Dağıtımdan Bağımsız” PaketlerSon birkaç yılda dağıtımdan bağımsız (veya konteynerize veya evrensel 🤷) paket biçimleri iyice yaygınlaştı. Peki nedir bu dağıtımdan bağımsız paket yöneticileri?Dağıtımdan bağımsız paket biçimleri, bildiğimiz paket biçimlerinden farklı olarak, uygulamayı tek bir paket olarak kurmak ve çalıştırmak için tüm bağımlılıklarla uygulamaları bir araya getirir.Tabi bu çok avantajlı görünebilir, sonuçta aynı bağımlılığın farklı sürümlerini kullanmak isteyen iki uygulamanın olması gibi birçok farklı sorunlarla karşılaşmazsınız. Her ne kadar günümüz Linux ve açık kaynak yazılım geliştirme topluluğunun büyümesiyle böyle sorunlarla sık karşılaşmasakta güncellemeleri en hızlı şekilde sunan dağıtımlarda (bleeding-edge) böyle sorunlarla karşılaşabiliyoruz. Birde şuan aklıma geldiği gibi stabil ve sık güncellenmeyen dağıtımınızda uygulamaları güncel şekilde kullanabilmeniz için de çok iyi bir buluş. Fakat bu paket biçimlerinin ve çalışma mantıklarının da kendi dezavantajları var; Bir geliştirici, kendi uygulamasını veya başkasının uygulamasını dağıtmak için dağıtımdan bağımsız paket biçimi kullandığında, bağımlılıkların en son güvenlik önlemleriyle güncel olmasını sağlamaktan tamamen sorumlu olur. Göz ardı edildiğinde, paket sistem için bir güvenlik tehdidi oluşturabilir. Geleneksel yazılım paketleri, dağıtımın geliştiricileri tarafından servis edilir ve bağımlılıkların en son güvenlik güncellemeleriyle güncellenmesini sağlar. Bu paket formatları ile oluşturulmuş uygulamalar geleneksel paket formatları ile kurduğumuz uygulamalardan daha az performans sergileyebilir. Bu dağıtımdan bağımsız paketlerin çalışma mantığı bazı açılardan sorun çıkarabilir. Örneğin sisteminize Firefox’u snap pakedi olarak kurarsanız, snap uygulamalarının kum havuzunda (güvenli sanal depolama) çalışması nedeni ile Firefox sisteminiz ile doğrudan iletişim kurma becerisine sahip olamaz. Bu yüzden Gnome kabuk uzantıları için oluşturulan eklenti gibi sistem ile iletişim kuran bir eklenti yüklediğinizde çalışmayacaktır. SnapSnap, Canonical tarafından geliştirilen ve ilk olarak 2014’te piyasaya sürülen dağıtımdan bağımsız paket formatı/yöneticisidir. Başlangıçta Ubuntu için geliştirilmiştir ancak Arch, Linux Mint, CentOS, Gentoo ve Fedora gibi diğer Linux dağıtımlara da resmi şekilde uyarlanmıştır.Bu paket sisteminin geliştirmesinin arkasındaki asıl amaç, uygulamaların IoT, Ubuntu Core ve farklı Ubuntu versiyonlarını çalıştıran çeşitli cihazlarda çalışması için tek bir format bulmaktı. Snap kurulu uygulamaları sanal güvenli alanda (sand-box) çalıştırmaktadır. Bu sayede kurulu uygulamalar sisteme zarar verememektedir.Snap için kullanılan resmi uygulama mağazası Snapcraft‘dır. Dağıtımdan bağımsız paket yöneticileri arasında en büyük uygulama havuzuna sahiptir. Snapcraft, bizzat Canonical ekibi tarafından kontrol edilmektedir.FlatpakFlatpak da Linux sistemlerinde genel uygulama dağıtımını ve kullanımını basitleştirmeyi amaçlayan dağıtımdan bağımsız başka bir paket biçimidir. Tıpkı snap gibi flatpak ile kurulmuş uygulamar da sanal güvenli alanda çalışmaktadır.Flatpak, 2015 yılında Red Hat, Endless Computers ve Collabora’nın desteği ile resmi olarak piyasaya çıkmıştır. Yaygın bir şekilde kullanılan bir çok dağıtım Flatpak tarafından desteklenmektedir.Flatpak sisteminin kendisi C programla dilinde geliştirildi ve LGPL lisansı altında yayınlandı. Baş geliştirici, bir Red Hat çalışanı olan Alexander Larsson’dur.Flatpak, Snap’ın aksine tek bir şirket tarafından yönetilen tek bir depoya sahip değildir. Flatpak birden fazla depo kullanımını destekler. Flatpak için kullanılan resmi uygulama mağazası Flathub‘dır. Başlangıçta Flathub, web sitesinde yalnızca açık kaynaklı uygulamaların paylaşımına izin vermişti ancak yakın zamanda tescilli uygulamaların da paylaşılmasını onayladı.AppImageAppImage, ilk olarak 2004 yılında “Kik” adıyla piyasaya sürülen bir başka yaygın dağıtımdan bağımsız paket formatıdır.Taşınabilir bir dosya formatıdır. “Bir uygulama = bir dosya” konseptine sahiptir. Bunun anlamı uygulama ve gerekliliklerinin tek bir dosyayada toplandığıdır. Windows işletim sistemlerindeki .exe dosya formatına benzemektedir. AppImage formatındaki dosyaları çalıştırmak çok kolaydır, yürütülebilirlik (chmod +x) izni verildikten sonra dosyaya çift tıklanması yeterlidir. Diğer iki paketleme sistemindeki gibi AppImage uygulamarı da sanal güvenli alanda çalışmaktadır.AppImage paketlerini mağaza ortamında görebileceğiniz resmi bir site yoktur. Onun yerine bu sitede bu formatta paylaşılan uygulamalar listelenmiştir.AppImage biçimindeki uygulamalar içlerinde güncelleme için gerekli bilgileri tutsalar da kendi başlarına güncellenebilecek bir yapıya sahip değillerdir. Sisteminizde AppImage uygulamalarını kullanıyorsanız aşağıdaki iki araç işinize yarayabilir; AppImageUpdate AppImage LauncherFarklarıAşağıdaki tabloda üç paket sisteminin/biçiminin önemli özelliklerinin karşılaştırması bulunmaktadır. Özellikler Snap Flatpak AppImage GUI veya CLI üzerinden izin kontrolleri Var Var Yok Güvenli (korumalı) depolama desteği Var Var Var Güvenli (korumalı) depolama zorunluluğu Var Var Yok Uygulama taşınabilirliği Hayır Hayır Evet Yerel tema desteği Var (kısmi) Var (kısmi) Var (kısmi) Tek, yürütülebilir dosya formatı Hayır Hayır Evet Uygulama mağazası Var Var Var sayılır Farklı sürümlerde paralel uygulama desteği Var Var Var Otomatik güncellemeler Var Var Var (3.parti uygulamalar ile) Chrome OS desteği Var Var Var Uygulama boyutları Yüksek Yüksek Diğer ikisi kadar yüksek değil Uygulama sayısı Yüksek Snap kadar yüksek değil Arada bir yerde Masaüstü uygulama mağazaları için eklenti Var Var Yok SonuçGördüğünüz üzere dağıtımdan bağımsız paket biçimlerinin avantajları olduğu gibi dezavantajları da var. Her ne kadar geleneksel paket biçimleri ve sistemleri ile boy ölçüşecek durumda olmasalar da, benim şahsi görüşüm, bu konteynerize veya evrensel veya veya dağıtımdan bağımsız diyebileceğimiz paket sistemleri ve biçimleri gelecekte çok önemli yerlere gelecek gibi duruyor. Özellikle bu teknolojiler Linux ekosisteminin geleceği için büyük önem arz ediyor gibi.Aslında Fedora Silverblue, openSUSE MicroOS gibi yenilikçi dağımtımlar için bu bahsettiğimiz paket sistemleri çok önemlidir. Şahsen çok hızlı evrilen Linux ekosisteminde bulunmak heyecan verici, umarım ileride daha ilginç gelişmelerle karşılaşırız." }, { "title": "Jekyll - Statik Web Site Oluşturucu", "url": "/blogum/posts/jekyll-statik-web-site-olu%C5%9Fturucu/", "categories": "Web", "tags": "statik web siteler, back-end, jekyll, ruby", "date": "2022-02-14 18:18:00 +0300", "snippet": "Statik Web SitelerStatik bir web sayfası, bir web geliştirme uygulaması tarafından oluşturulan dinamik web sayfalarının aksine, kullanıcının web tarayıcısına tam olarak depolandığı şekilde teslim edilen bir web sayfasıdır. Bunun anlamı web sayfalarının her kullanıcıya aynı içeriği gösterdiğidir.Statik ve Dinamik Web Siteleri yazımdan bu konu hakkında daha fazla bilgi edinebilirsiniz.JekyllJekyll, düz metinleri statik web sitelerine dönüştüren statik web sitesi oluşturucudur. Ruby kullanılarak yazılmıştır.Jekyll ile statik web sitesi oluşturmak için temel derecede HTML bilmeniz yeterlidir. Jekyll Markdown, YAML, HTML ve benzeri işaretleme dilleri ile yazdığınız içerikleri hızlı ve etkili şekilde web sayfalarına dönüştürür. Jekyll ile çok fonksiyonel siteler oluşturup bunları insanlarla kolayca paylaşabilirsiniz.Jekyll kalıcı bağlantı oluşturma, çoklu sayfa yaratma, kategori sistemi, özelleştirilmiş düzen oluşturma gibi bir çok özelliği içinde barındırır. Ayrıca eklentileri de vardır.Neden Jekyll ?Jekyll en kolay kullanıma sahip statik web site oluşturucu olabilir ve her platformda çalışmaktadır. Jekyll, GitHub tarafıdan Github Pages hizmeti için seçilmiş statik web site oluşturucudur, yani Jekyll dahili olarak desteklenen tek oluşturucudur1.BaşlarkenJekyll’ı kurmak ve kullanmak basittir, Aşağıdaki bağlantılardan gerekli bilgileri elde edebilirsiniz, ek olarak birkaç yararlı bağlantı daha bırakacağım. Jekyll Dökümantasyonu (Kaynaklar bölümüne de göz atınız) Jekyll ile GitHub Pages sayfası oluşturma Liquid şablon motoru Jekyll geliştiricileri tarafından oluşturulmuş örnek siteKaynaklar GitHub Pages hakkında &amp;#8617; " }, { "title": "Statik ve Dinamik Web Siteleri", "url": "/blogum/posts/statik-ve-dinamik-web-siteleri/", "categories": "Web", "tags": "statik web siteler, dinamik web siteler, back-end", "date": "2022-02-14 16:20:00 +0300", "snippet": "Statik Web SitelerStatik web sitelerinde, web sayfaları, HTML, CSS veya JavaScript gibi basit diller kullanılarak önceden oluşturulmuş kaynak kod dosyaları olan sunucu tarafından çalıştırılır. Statik web sitelerinde kullanıcı tarafından sunucu üzerinde herhangi bir içerik değişikliği yaplıması söz konusu değildir. Web sayfaları sunucu tarafından hiçbir değişiklik yapılmadan çalıştırılır. Bu nedenle statik web siteleri hızlıdır. Veritabanları ile etkileşim yoktur.Bu tanımlama statik web sitelerinin kullanıcı eylemlerine yanıt vermeyeceği anlamına gelmez, bu web sitelerine statik denir çünkü bunlar sunucuda manipüle edilemez, değiştirilemez veya veritabanları ile etkileşime giremez.graph LR A[Tarayıcı/Kullanıcı] --&amp;gt;|HTTP İsteği| B{Web Sunucusu} B --&amp;gt;|HTTP Yanıtı| AStatik web sitesi için kullanıcı ile sunucu arasındaki ilişkiyi temsil eden grafik.Dinamik Web SitelerDinamik web sitelerinde, web sayfaları sunucu tarafından oluşturulur ve bu işlem sunucu çalışırken sürekli gerçekleşir, yani önceden oluşturulmuş web sayfaları yoktur. PHP, ASP.NET, Node.js gibi dillerle sunucu tarafında kullanıcının talebine göre web sayfaları oluşturulur. Bu nedenle, statik web sitelerinden daha yavaştırlar ancak kullanıcı tarafından içeriğin değiştirilmesi ve veritabanlarıyla etkileşim mümkündürflowchart RL subgraph Dinamik C[(Veritabanı)] --&amp;gt; B{Web Sunucusu} B --&amp;gt; C endA[Kullanıcı/Tarayıcı] --&amp;gt;|HTTP İsteği| DinamikDinamik --&amp;gt;|HTTP Yanıtı| ADinamik web sitesi için sunucunun veritabanı ve kullanıcı ile arasındaki ilişkiyi temsil eden grafik.Farkları Statik Web Siteler Dinamik Web Siteler Web sayfalarının içeriği çalışma sırasındadeğiştirilemez. Web sayfalarının içeriği çalışırken değiştirilebilir. Veritabanı ile etkileşim mümkün değildir. Veritabanı ile etkileşim mümkündür. Dinamik sitelere göre hızlı yüklenirler. Statik web sitelerinden daha yavaş yüklenebilirler. Daha ucuz geliştirme maliyeti. Daha fazla geliştirme maliyeti. Web sitesini geliştirmek için HTML, CSS, Javascriptkullanılmaktadır. PHP, Node.js gibi sunucu tarafı dilleri kullanılmaktadır. Sayfa her yüklendiğinde aynı içerik teslim edilir. Sayfa her yüklendiğinde içerik değişebilir, değiştirilebilir. " } ]
